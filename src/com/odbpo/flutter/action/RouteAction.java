package com.odbpo.flutter.action;

import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.actionSystem.PlatformDataKeys;
import com.intellij.openapi.application.WriteAction;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.util.ThrowableRunnable;
import com.odbpo.flutter.common.Config;
import com.odbpo.flutter.common.Constants;
import com.odbpo.flutter.util.FileUtil;
import com.odbpo.flutter.util.NotificationUtil;
import com.odbpo.flutter.util.StringUtil;

import org.apache.http.util.TextUtils;
import org.jetbrains.annotations.NotNull;

import java.util.Collection;
import java.util.stream.Collectors;

/**
 * createDate: 2022/11/22 on 09:34
 * desc:
 *
 * @author azhon
 */


public class RouteAction extends AnAction {
    @Override
    public void actionPerformed(@NotNull AnActionEvent event) {
        Project project = event.getData(PlatformDataKeys.PROJECT);
        if (project == null) return;
        Config config = new Config();
        Collection<VirtualFile> dartFiles = FileUtil.getDirFile(project, Constants.LIB_DIR);
        if (dartFiles == null) {
            NotificationUtil.showNotify(project, "No *page file need to be generate！");
            return;
        }
        ///必须是*page.dart文件
        dartFiles = dartFiles.stream().filter(file -> file.getName().endsWith(Constants.PAGE_DART_FILE_TYPE)).collect(Collectors.toList());
        //没有需要生成的路由文件
        if (dartFiles.isEmpty()) {
            NotificationUtil.showNotify(project, "No *page file need to be generate！");
            return;
        }
        generateRoute(project, config, dartFiles);
        NotificationUtil.showNotify(project, "Generate route successful！");
    }

    /**
     * 生成路由文件
     */
    private void generateRoute(Project project, Config config, Collection<VirtualFile> dartFiles) {
        VirtualFile dirFile = FileUtil.createDir(project, Constants.ROUTE_DIR);
        if (dirFile == null) return;
        try {
            String prefix = config.getPrefix();
            if (TextUtils.isEmpty(config.getPrefix())) {
                prefix = config.getModuleName();
            }
            //生成代码
            String fileName = prefix + "_route.dart";
            String code = createCode(prefix, dartFiles);
            WriteAction.run((ThrowableRunnable<Throwable>) () -> FileUtil.writeFile(project, dirFile, fileName, code));
        } catch (Throwable e) {
            e.printStackTrace();
        }
    }


    /**
     * 生成代码
     */
    private String createCode(String prefix, Collection<VirtualFile> dartFiles) {
        final StringBuilder codes = new StringBuilder();
        codes.append("///This file is automatically generated by the [FlutterResource], your modifications will be lost.").append("\n");
        codes.append("class ").append(StringUtil.toCamelCase(prefix, true));
        codes.append("Route").append(" {").append("\n");
        String routePrefix = StringUtil.toCamelCase(prefix, false);
        for (VirtualFile dartFile : dartFiles) {
            String name = StringUtil.toCamelCase(StringUtil.removeSuffix(dartFile.getName()), false);
            codes.append("  static const ");
            codes.append(name);
            codes.append(" = '/").append(routePrefix).append("/");
            codes.append(name);
            codes.append("';\n");
        }
        codes.append("}");
        codes.append("\n");
        return codes.toString();
    }

}
